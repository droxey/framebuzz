[group:%(proj_name)s]
programs=gunicorn_%(proj_name)s

[program:gunicorn_%(proj_name)s]
command=%(venv_path)s/bin/python %(proj_path)s/manage.py run_gunicorn -c %(venv_path)s/run/gunicorn.conf.py -p %(venv_path)s/run/gunicorn.pid --timeout=60 
directory=%(proj_path)s
user=%(user)s
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/supervisord_gunicorn_stdout.log
stderr_logfile=/var/log/supervisord_gunicorn_stderr.log
environment=LANG="%(locale)s",LC_ALL="%(locale)s",LC_LANG="%(locale)s",NEW_RELIC_CONFIG_FILE="%(proj_path)s/newrelic.ini"

[program:socketserver]
command=%(venv_path)s/bin/python %(proj_path)s/manage.py socketserver
directory=%(proj_path)s
user=%(user)s
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/socketserver_stdout.log
stderr_logfile=/var/log/socketserver_stderr.log

[program:celerybeat]
command=%(venv_path)s/bin/python %(proj_path)s/manage.py celery beat -S djcelery.schedulers.DatabaseScheduler
directory=%(proj_path)s
user=$(user)s
numprocs=1
stdout_logfile=/var/log/celerybeat_stdoout.log
stderr_logfile=/var/log/celerybeat_stderr.log
autostart=true
autorestart=true
startsecs=10

[program:celery]
command=%(venv_path)s/bin/python %(proj_path)s/manage.py celeryd --loglevel=INFO
directory=%(proj_path)s
user=$(user)s
numprocs=1
stdout_logfile=/var/log/celeryd_stdoout.log
stderr_logfile=/var/log/celeryd_stderr.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998