import raven
LOCAL_SETTINGS = True
from settings import *

###################
# DATABASE        #
###################
DEBUG = True

DATABASES = {
    'default': {
        'ENGINE': 'django_postgrespool',
        'NAME': 'framebuzz',
        'USER': 'framebuzz',
        'PASSWORD': 'framebuzz',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

FABRIC = {
    "SSH_USER": "deploy", # SSH username
    "SSH_PASS":  "", # SSH password (consider key-based authentication)
    "SSH_KEY_PATH":  "", # Local path to SSH key file, for key-based auth
    "HOSTS": [], # List of hosts to deploy to
    "VIRTUALENV_HOME":  "/sites/.virtualenvs", # Absolute remote path for virtualenvs
    "PROJECT_NAME": "framebuzz", # Unique identifier for project
    "REQUIREMENTS_PATH": "requirements.txt", # Path to pip requirements, relative to project
    "GUNICORN_PORT": 8000, # Port gunicorn will listen on
    "LOCALE": "en_US.UTF-8", # Should end with ".UTF-8"
    "LIVE_HOSTNAME": "", # Host for public site.
    "REPO_URL": "git@git.framebuzzlab.com:ross/framebuzz.git", # Git or Mercurial remote repo URL for the project,
    "REPO_BRANCH": '',
    "DB_PASS": "", # Live database password
    "ADMIN_PASS": "", # Live admin user password,
    "SENTRY_DSN": "",
    "RAVENJS_DSN": ""
}

RAVEN_CONFIG = {
    'dsn': FABRIC['SENTRY_DSN'],
    'release': raven.fetch_git_sha(os.path.join(os.path.dirname( __file__ ), '..')),      # Fetch git info and base release numbers on that.
}

# Django Compress
COMPRESS_ENABLED = True

SHORT_BASE_URL = 'http://localhost:9999/s/'
SHORTEN_FULL_BASE_URL = 'http://localhost:9999/s/'

# Django Debug Toolbar:
INSTALLED_APPS += (
    'debug_toolbar',
    'inspector_panel',
    'template_timings_panel',
)

#INTERNAL_IPS = ('127.0.0.1', '0.0.0.0',)

MIDDLEWARE_CLASSES += ('debug_toolbar.middleware.DebugToolbarMiddleware',)
DEBUG_TOOLBAR_CONFIG = {
    'INTERCEPT_REDIRECTS': False,
}

MAINTENANCE_IGNORE_URLS = (
    r'^/admin',
    r'^/mobile'
)

IGNORED_TEMPLATES = ["debug_toolbar/*"]

DEBUG_TOOLBAR_PANELS = (
    'debug_toolbar.panels.version.VersionDebugPanel',
    'debug_toolbar.panels.timer.TimerDebugPanel',
    'inspector_panel.panels.inspector.InspectorPanel',
    'template_timings_panel.panels.TemplateTimings.TemplateTimings',
    'debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel',
    'debug_toolbar.panels.headers.HeaderDebugPanel',
    'debug_toolbar.panels.request_vars.RequestVarsDebugPanel',
    'debug_toolbar.panels.template.TemplateDebugPanel',
    'debug_toolbar.panels.sql.SQLDebugPanel',
    'debug_toolbar.panels.signals.SignalDebugPanel',
    'debug_toolbar.panels.logger.LoggingPanel',
)

CACHES = {
    'default': {
        'BACKEND': 'caching.backends.locmem.CacheClass',
        'PREFIX': 'fbz:'
    }
}

CACHE_COUNT_TIMEOUT = 60
